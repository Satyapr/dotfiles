let plug_plugin = expand('~/.vim/autoload/plug.vim')

if !filereadable(plug_plugin)
    echo "Installing plug..."
    echo ""
    silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs \
    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim

    echo "Installing plugins..."
    echo ""
    :PlugInstall
endif

call plug#begin('~/.vim/plugged')

" Generic/C++ plugins/Must have plugins
Plug 'altercation/vim-colors-solarized'                 " Solarized color scheme.
Plug 'octol/vim-cpp-enhanced-highlight'                 " Syntax highlighting for cpp language
Plug 'terryma/vim-multiple-cursors'                     " Sublime multiple cursor.
Plug 'easymotion/vim-easymotion'                        " Modern Vim motion controls
Plug 'scrooloose/nerdcommenter'                         " Shortcut for commenting lines and blocks.
Plug 'reedes/vim-colors-pencil'                         " color pencil theme for notes/docs.
Plug 'JazzCore/ctrlp-cmatcher'                          " fast fuzzy matcher for ctrlp
Plug 'itchyny/lightline.vim'                            " light-weight powerline for status bar
Plug 'jiangmiao/auto-pairs'                             " Auto pairs
Plug 'sheerun/vim-polyglot'                             " Syntax highlighting for 50+ languages.
Plug 'xuhdev/SingleCompile'                             " Single file compilation
Plug 'tpope/vim-surround'                               " change quotes/braces easily
Plug 'ctrlpvim/ctrlp.vim'                               " Fast fuzzy search for opening projects files
Plug 'Shougo/neocomplete'
Plug 'Shougo/neosnippet'
Plug 'Shougo/neosnippet-snippets'
Plug 'EinfachToll/DidYouMean'

" Haskell plugins
Plug 'dag/vim2hs'
Plug 'eagletmt/ghcmod-vim'
Plug 'eagletmt/neco-ghc'

"Plug 'derekelkins/agda-vim'
Plug 'idris-hackers/idris-vim'

"Plug 'scrooloose/nerdtree'
"Plug 'jreybert/vimagit'
"Plug 'airblade/vim-gitgutter'                           " shows git diff in editor
"Plug 'christoomey/vim-sort-motion'
"Plug 'gcmt/wildfire.vim'                                " expand visual-selection region
"Plug 'honza/vim-snippets'                               " Snippets for vaious programming languages
"Plug 'scrooloose/syntastic'                             " Syntax checking plugin for 50+ languages
"Plug 'tpope/vim-commentary'
"Plug 'tpope/vim-fugitive'                               " git plugin
"Plug 'tpope/vim-repeat'
"Plug 'tpope/vim-dispatch'
"Plug 'wikitopian/hardmode'
"Plug 'xolox/vim-misc'
"Plug 'tfnico/vim-gradle'
"Plug 'vim-scripts/GreedyBackspace.vim'
"Plug 'vim-scripts/Wombat'
"Plug 'johnsyweb/vim-makeshift'
"Plug 'FelikZ/ctrlp-py-matcher'
"Plug 'junegunn/goyo.vim'
"Plug 'nathanaelkane/vim-indent-guides'
"Plug 'ervandew/supertab'
"Plug 'neomake/neomake'
Plug 'Shougo/vimproc.vim'
"Plug 'artur-shaik/vim-javacomplete2'
"Plug 'Shougo/deoplete.nvim'
"Plug 'godlygeek/tabular'
"Plug 'plasticboy/vim-markdown'
"Plug 'szw/vim-g'

"Plug 'xolox/vim-easytags'
"Plug 'rking/ag.vim'                                     " Fast searching/substitution in multiple files
"Plug 'Shougo/unite.vim'
"Plug 'vim-scripts/LaTeX-Suite-aka-Vim-LaTeX'            " Latex all-in-one plugin


" Unused plugins
"Plug 'junegunn/fzf'                                 ",{'dir' : '~/dotfiles/fzf', 'do' : './install -all'}
"Plug 'junegunn/fzf.vim'
"Plug 'koron/minimap-vim'
"Plug 'Shougo/neomru.vim'
"Plug 'Shougo/neosnippet-snippets'
"Plug 'Shougo/neosnippet.vim'
"Plug 'Shougo/vimfiler.vim'
"Plug 'Shougo/vimshell.vim'
"Plug 'bling/vim-airline'
"Plug 'koron/nyancat-vim'
"Plug 'osyo-manga/vim-snowdrop'
"Plug 'sjl/gundo.vim'
"Plug 'xolox/vim-notes'
"Plug 'Raimondi/delimitMate'
"Plug 'jordwalke/VimCompleteLikeAModernEditor'
"Plug 'majutsushi/tagbar'
"Plug 'mileszs/ack.vim'
"Plug 'mkarmona/materialbox'
"Plug 'nathanaelkane/vim-indent-guides'
"Plug 'sollidsnake/vterm'
"Plug 'tpope/vim-fireplace'
"Plug 'wincent/command-t'
"Plug 'tpope/vim-vinegar'
" Disabling YCM in VimR (doesn't work due to conflict in python bindings)
"if !has('gui_vimr')
    "Plug 'Valloric/YouCompleteMe', { 'do': './install.py --clang-completer --system-libclang' }
"endif

if has('lua')
    "Plug 'Shougo/neocomplete.vim'
    "Plug 'SirVer/ultisnips'
endif


" All of Plugins must be added before the following line
call plug#end()

" Now process all of the configuration files that I have stored in my 'config'
" directory, which significantly cleans up this file.
for filename in sort(split(glob('~/.vim/config/*.vim'), '\n'))
    execute 'source '.filename
endfor
